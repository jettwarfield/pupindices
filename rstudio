#setup for data ####
  library(tidyverse)
  sealdrone <- read_csv("data/raw/uasdata.csv")
  indexall <- read_csv("data/raw/oce.indices.csv")
#loading library, importing dataframes

soi_pup_data <- filter(sealdrone, class == "pup", peak.breeding == "Y", between(year, 2017, 2024)) 
#arrow creates the object "pup_data" by pulling from a filtered subset
#of the class data

pup_data <- filter(sealdrone, class == "pup", peak.breeding == "Y", between(year, 2019, 2024)) 
#arrow creates the object "pup_data" by pulling from a filtered subset
#of the class data

soi_pup_data <- soi_pup_data %>%
  group_by(year) %>% 
  summarize(pup_count = n()) %>% 
  rename(Year = year) %>% 
  ungroup()

pup_count <- pup_data %>%
  group_by(year) %>% 
  summarize(pup_count = n()) %>% 
  rename(Year = year) %>% 
  ungroup()
#counts the number of pups per year and creates a new column in pup_data
#of these totals

ratio <-filter(sealdrone, peak.breeding == "Y", between(year, 2019, 2024)) %>% 
  group_by(year,class) %>% 
  summarize(count = n()) %>% 
  rename(Year = year) %>% 
  ungroup()

ratio <- ratio %>% 
  pivot_wider(names_from = class, 
              values_from = count) 
ratio <- ratio %>% 
  mutate(ratio = pup/female)

index_years <- filter(indexall, between(Year, 2017, 2024))
#filters to just 2017-24, excludes 2025
soi_years <- index_years %>% 
  select(Year, SOI) %>% 
  mutate(Lag_Year = Year, 
         Year = Lag_Year + 2)
#just 2017-2024 and SOI
soi_pups <- left_join(soi_pup_data, soi_years, by = "Year")


npgo_years <- index_years %>% 
  select(Year, NPGO) %>% 
  mutate(Lag_Year = Year, 
         Year = Lag_Year + 1)
npgo_pups <- left_join(pup_count, npgo_years, by = "Year") 


pdo_years <- index_years %>% 
  select(Year, PDO) %>% 
  mutate(Lag_Year = Year, 
         Year = Lag_Year + 1)
pdo_pups <- left_join(pup_count, pdo_years, by = "Year") 


#bar chart for pups fig A #####
ggplot(data=pup_count, aes(x = Year, y = pup_count)) +
  geom_col(width=0.7, alpha = 0.8, color = "#006837FF") +
  scale_x_continuous(breaks = seq(2016,2025, by = 2)) +
  coord_cartesian(ylim = c(500, 1250))+
  scale_y_continuous(breaks = seq(500,1200, by = 100)) +
  #^^ scale modifies the axes intervals
  theme(axis.title = element_text(size = 10), 
        legend.position = "none",
        panel.background = element_rect(fill = "#E2EFDB"),
        #plot.background = element_rect(fill = "#FFF1F1"), changes bg color
        plot.title = element_text(face = "bold", size = 12, color ="#006837FF"),
        plot.subtitle = element_text(size = 8),
        plot.tag = element_text(),
        plot.tag.position = c(0.03, 0.98),
        axis.title.x = element_text(color ="#004529FF"),
        axis.title.y = element_text(color ="#004529FF")) +
  labs(title = "Seal Pups per Breeding Season",
       subtitle = "Counts taken at the end of January each year",
       tag = "A)",
       x = "Year",
       y = "Number of Pups")

 
#how to put charts on same figure + same y axis scales? 
#line chart for SOI fig 1 #### 
ggplot(data=soi_pups,aes(x = Lag_Year, y = SOI))+
  geom_point(color = "#006837FF") +
  geom_line(color = "#238443FF", linewidth = 1, alpha = 0.5) +
  #^^add linetype = "dotted" to change line style
  geom_area(fill = "#78C679FF", alpha = 0.3) +
  scale_x_continuous(breaks = seq(2017,2022, by = 1)) +
  coord_cartesian(xlim = c(2017, 2022), ylim = c(-2.5,2)) +
  scale_y_continuous(breaks = seq(-2.5,2, by = 0.5)) +
  theme(axis.title = element_text(size = 10), 
        legend.position = "none",
        panel.background = element_rect(fill = "#E2EFDB"),
        #plot.background = element_rect(fill = "#FFF1F1"), changes bg color
        plot.subtitle = element_text(size = 8),
        plot.title = element_text(face = "bold", size = 12, color ="#006837FF"),
        plot.tag = element_text(),
        plot.tag.position = c(0.03, 0.98)) +
  labs(title = "SOI over Time",
       subtitle = "Lag of -2 applied to pup count years",
       tag = "1)",
       x = "Year",
       y = "SOI Score",) +
       geom_hline(aes(yintercept = 0), linewidth = .8, linetype = "solid", color = "#004529FF", alpha = 0.6)




#line chart for PDO fig 2 ####
ggplot(data = pdo_pups, mapping = aes(x = Lag_Year, y = PDO)) +
  geom_line(color = "#BB2F5E", linewidth = 1, alpha = 0.5) +
  geom_area(fill = "#C67892", alpha = 0.3) +
  geom_point(colour = "#680037") +
  theme(panel.background = element_rect(fill = "#EFDBE2"),
        plot.tag = element_text(),
        plot.tag.position = c(0.03, 0.98),
        plot.title = element_text(face = "bold", size = 12, color ="#680037"),
        plot.subtitle = element_text(size = 8)) +
  labs(title = "PDO Scores over Time",
       tag = "2)",
       subtitle = "Lag of -1 applied to pup count years",
       x = "Year",
       y = "PDO Score") +
  scale_x_continuous(breaks = seq(2018,2023, by = 1)) +
  coord_cartesian(xlim = c(2018, 2023), ylim = c(-2.5,2)) +
  scale_y_continuous(breaks = seq(-2.5,2, by = 0.5)) +
  geom_hline(aes(yintercept = 0), linewidth = .8, linetype = "solid", color = "#450017", alpha = 0.6)
#line chart for NPGO fig D ####
ggplot(data = npgo_pups, mapping = aes(x = Lag_Year, y = NPGO)) +
  geom_line(color = "#235684", linewidth = 1, alpha = 0.5) +
  geom_area(fill = "#7892C6", alpha = 0.3) +
  geom_point(colour = "#003768") +
  theme(panel.background = element_rect(fill = "#DBE7EF"),
        plot.tag = element_text(),
        plot.tag.position = c(0.03, 0.98),
        plot.title = element_text(face = "bold", size = 12, color ="#003768"),
        plot.subtitle = element_text(size = 8)) +
  labs(title = "NPGO Scores over Time",
       tag = "3)",
       subtitle = "Lag of -1 applied to pup count years",
       x = "Year",
       y = "NPGO Score") +
  scale_x_continuous(breaks = seq(2018,2023, by = 1)) +
  #ylim(-2.5, 1.5) +
  coord_cartesian(xlim = c(2018, 2023), ylim = c(-2.5,2)) +
  scale_y_continuous(breaks = seq(-2.5,2, by = 0.5)) +
  #coord_cartesian(ylim = c(0.2, -2)) ASK ROXANNE +
  geom_hline(aes(yintercept = 0), linewidth = .8, linetype = "solid", color = "#002F45", alpha = 0.6)

#
#linear regression models:
#
#linear regression SOI/pups fig 1 ####
ggplot(data = soi_pups,aes(x = SOI, y = pup_count))+
    geom_point(color = "#006837FF") +
    geom_smooth(method = "lm", formula = y~x,aes(color = "green")) +
   # scale_x_continuous(breaks = seq(-1.5,1.5, by = 0.5)) +
   # coord_cartesian(xlim = c(-1.25, 1.25)) +
    coord_cartesian(ylim = c(850, 1350)) +
    scale_y_continuous(breaks = seq(900,1300, by = 100)) +
    theme(axis.title = element_text(size = 10), 
          legend.position = "none",
          panel.background = element_rect(fill = "#E2EFDB"),
          plot.title = element_text(face = "bold", size = 10, color ="#006837FF"),
          plot.subtitle = element_text(size = 8),
          plot.tag = element_text(),
          plot.tag.position = c(0.03, 0.98)) +
    labs(title = "Pup Abundance as a Function of SOI",
         #subtitle = "Pup count from two years prior to SOI value?????? ask roxanne",
         x = "SOI Value",
         y = "Number of Pups",
         tag = "1)")
  
  lmSOI <- lm(pup_count ~ SOI, data = soi_pups)
  summary(lmSOI)
  #^^ shows linear model data, Y~X
  
  
#linear regression PDO fig 2 ####

  ggplot(data = pdo_pups,aes(x = PDO, y = pup_count))+
    geom_point(color = "#680037") +
    geom_smooth(method = "lm", formula = y~x) +
    coord_cartesian(ylim = c(800, 1400)) +
    scale_y_continuous(breaks = seq(800,1400, by = 100)) +
    scale_x_continuous(breaks = seq(-1.75,.25, by = 0.5)) +
    coord_cartesian(xlim = c(-1.75, .25)) +
    theme(axis.title = element_text(size = 10), 
          legend.position = "none",
          panel.background = element_rect(fill = "#EFDBE2"),
          plot.title = element_text(face = "bold", size = 10, color ="#680037"),
          plot.subtitle = element_text(size = 8),
          plot.tag = element_text(),
          plot.tag.position = c(0.03, 0.98)) +
    labs(title = "Pup Abundance as a Function of PDO",
         #subtitle = "Counts taken at the end of January each year",
         tag = "2)",
         x = "PDO Value",
         y = "Number of Pups")
  
  lmPDO <- lm(pup_count ~ PDO, data = pdo_pups)
  summary(lmPDO)
  #^^ shows linear model data, Y~X

#linear regression NPGO fig 3 ####
ggplot(data = npgo_pups,aes(x = NPGO, y = pup_count))+
    geom_point(color = "#003768") +
    geom_smooth(method = "lm", formula = y~x, aes(color = "green")) +
    coord_cartesian(ylim = c(700, 1300)) +
    scale_y_continuous(breaks = seq(700,1300, by = 100)) +
    scale_x_continuous(breaks = seq(-2.25,-0.75, by = 0.5)) +
    coord_cartesian(xlim = c(-2.3, -0.75)) +
    theme(axis.title = element_text(size = 10), 
          legend.position = "none",
          panel.background = element_rect(fill = "#DBE7EF"),
          plot.title = element_text(face = "bold", size = 10, color ="#003768"),
          plot.subtitle = element_text(size = 8),
          plot.tag = element_text(),
          plot.tag.position = c(0.03, 0.98)) +
    labs(title = "Pup Abundance as a Function of NPGO",
         #subtitle = "Counts taken at the end of January each year",
         tag = "3)",
         x = "NPGO Value",
         y = "Number of Pups")
  
  lmNPGO <- lm(pup_count ~ NPGO, data = npgo_pups)
  summary(lmNPGO)
  #^^ shows linear model data, Y~X



  
  
  
  


#random notes ####
#correlogram workshop ####
  
  #loading packages
  #library(GGally)
  
  # make a correlogram and another plot (multiple time series curve?)
  
  # change to correlation between pup_count & each ocean index
  #ggcorr(soi_pups[,2:3], nbreaks = 10)
  
  
  
  
#line chart for pups ####
#ggplot(data=pup_count,aes(x = Year, y = pup_count))+
 # geom_point(color = "#006837FF") +
  #geom_line(color = "#238443FF", linewidth = 1, alpha = 0.5) +
      #^^add linetype = "dotted" to change line style
  #geom_smooth(method = "loess", span = 1, se = FALSE) + 
      #^^trying to smooth the geom_line :(
 # geom_area(fill = "#006837FF", alpha = 0.2) +
  #scale_x_continuous(breaks = seq(2016,2025, by = 2)) +
  
  #coord_cartesian(ylim = c(800, 1220))+
  #scale_y_continuous(breaks = seq(800,1200, by = 100)) +
      #^^ scale modifies the axes intervals
  #theme(axis.title = element_text(size = 10), 
   #     legend.position = "none",
    #    panel.background = element_rect(fill = "#E2EFDB"),
        #plot.background = element_rect(fill = "#FFF1F1"), changes bg color
     #   plot.title = element_text(face = "bold", size = 12, color ="#006837FF"),
      #  plot.subtitle = element_text(size = 8)) +
 # labs(title = "E. Seal pups per breeding season",
  #     subtitle = "Counts taken at the end of January each year",
   #    x = "Year",
    #   y = "Number of Pups")

# x <- list(col1 = pups, col2 = SOI)
# pups_SOI <- as.data.frame(x)
    #creates data.frame of just pups vs SOI
# > model <- lm(SOI~pups)
# > summary(model)
# > plot(pups,SOI) + abline(-0.570937,0.000712)
    #^^plotted abline using (intercept,slope)

#trying to figure out color palette
#c("#FFFFE5FF", "#F7FCB9FF", "#D9F0A3FF", "#ADDD8EFF", "#78C679FF", "#41AB5DFF", "#238443FF", "#006837FF", "#004529FF")
